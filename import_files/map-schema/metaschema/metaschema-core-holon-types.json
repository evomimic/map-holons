{
  "meta": {
    "description": "This file defines the abstract and concrete Holon Types required by the MAP logic itself that are bundled as part of the MAP Metaschema-v0.0.3",
    "generator": "MAP Types and Schema Refactor — July 2025",
    "load_with": [
      "metaschema-abstract-value-types.json",
      "metaschema-root.json",
      "metaschema-concrete-value-types.json",
      "metaschema-property-types.json",
      "metaschema-relationship-types.json",
      "metaschema-keyrules-schema.json"
    ]
  },
  "holons": [
    {
      "key": "TypeDescriptor",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "TypeDescriptor",
        "type_name_plural": "TypeDescriptors",
        "display_name": "Type Descriptor",
        "display_name_plural": "Type Descriptors",
        "description": "The TypeDescriptor is a concrete, self-describing type in the MAP Type System that defines the structure, metadata, and behavioral obligations of all other types—including itself. It plays a dual role: as a descriptor, it declares the properties and relationships that instances of a given type must populate (via InstanceProperties and InstanceRelationships); as a holon, it is an instantiable entity that belongs to a schema, is owned by a holon space, and participates in MAP’s introspectable type graph. All concrete type definitions in MAP—such as property types, relationship types, and holon types—are instances of TypeDescriptor, making it the cornerstone of MAP’s fully self-describing architecture..",
        "instance_type_kind": "Holon",
        "is_abstract_type": false
      },
      "relationships": [
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.3"
          }
        },
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#MetaHolonType"
            },
            {
              "$ref": "#MetaTypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#TypeName.KeyRule"
          }
        },
        {
          "name": "InstanceProperties",
          "target": [
            {
              "$ref": "#TypeName.Property"
            },
            {
              "$ref": "#TypeNamePlural.Property"
            },
            {
              "$ref": "#DisplayName.Property"
            },
            {
              "$ref": "#DisplayNamePlural.Property"
            },
            {
              "$ref": "#Description.Property"
            },
            {
              "$ref": "#InstanceTypeKind.Property"
            },
            {
              "ref:": "IsAbstractType.Property"
            }
          ]
        }
      ]
    },
    {
      "key": "SchemaHolonType",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "SchemaHolonType",
        "type_name_plural": "SchemaHolonTypes",
        "display_name": "Schema Holon Type",
        "display_name_plural": "Schema Holon Types",
        "description": "Describes schema holons — groupings of holons that represent a cohesive schema. Includes the ability to define inter-schema dependencies.",
        "instance_type_kind": "Holon"
      },
      "relationships": [
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.3"
          }
        },
        {
          "name": "Extends",
          "target": {
            "$ref": "#HolonType"
          }
        },
        {
          "name": "InstanceProperties",
          "target": [
            {
              "$ref": "#MapStringPropertyType"
            },
            {
              "$ref": "#Description.Property"
            }
          ]
        },
        {
          "name": "InstanceRelationships",
          "target": [
            {
              "$ref": "#(SchemaHolonType)-[DependsOn]->(SchemaHolonType)"
            }
          ]
        }
      ]
    },
    {
      "key": "HolonSpace.HolonType",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "HolonSpace",
        "type_name_plural": "HolonSpaces",
        "display_name": "Holon Space Holon Type",
        "display_name_plural": "Holon Space Holon Type",
        "description": "Describes HolonSpace holons. A HolonSpace is a holon that, itself, is a container for holons. It maps 1:1 with a DHT. It also proxies inbound and outbound calls to other HolonSpaces of holons that represent a cohesive schema. Includes the ability to define inter-schema dependencies. With minimal InstanceProperties and no InstanceRelationships, a HolonSpace is very stable = i.e., owned holons and space proxies can be added to a space without requiring a new version of the HolonSpace.",
        "instance_type_kind": "Holon"
      },
      "relationships": [
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.3"
          }
        },
        {
          "name": "Extends",
          "target": {
            "$ref": "#MetaHolonType"
          }
        },
        {
          "name": "InstanceProperties",
          "target": [
            {
              "$ref": "#SpaceName.Property"
            },
            {
              "$ref": "#Description.Property"
            }
          ]
        }
      ]
    },
    {
      "key": "HolonType",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "HolonType",
        "type_name_plural": "HolonTypes",
        "display_name": "Abstract Holon Type",
        "display_name_plural": "Abstract Holon Types",
        "description": "HolonType is an abstract type descriptor that defines the structural role of all types used to describe holons in the MAP system. It serves as an anchor for concrete type descriptors—such as BookType, PersonType, or SchemaHolonType—which extend it to define specific categories of holons. By extending HolonType, these concrete types inherit a common set of structural obligations that govern how holons relate to their type and to the holon space in which they reside. This type is not intended to be instantiated directly.",
        "instance_type_kind": "Holon"
      },
      "relationships": [
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.3"
          }
        },
        {
          "name": "Extends",
          "target": {
            "$ref": "#MetaHolonType"
          }
        },
        {
          "name": "InstanceRelationships",
          "target": [
            {
              "$ref": "#(HolonType)-[DescribedBy]->(TypeDescriptor)"
            },
            {
              "$ref": "#(HolonType)-[OwnedBy]->(HolonSpaceType)"
            },
            {
              "$ref": "#(Holon)-[Properties]->(Property)"
            },
            {
              "$ref": "#(Holon)-[DeclaredRelationships]->(Relationship)"
            }
          ]
        }
      ]
    },
    {
      "key": "RelationshipType",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "RelationshipType",
        "type_name_plural": "RelationshipTypes",
        "display_name": "Abstract Relationship Type",
        "display_name_plural": "Abstract Relationship Types",
        "description": "Abstract base for declared and inverse relationship types.",
        "instance_type_kind": "Relationship"
      },
      "relationships": [
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.3"
          }
        },
        {
          "name": "Extends",
          "target": {
            "$ref": "#MetaHolonType"
          }
        },
        {
          "name": "InstanceProperties",
          "target": [
            {
              "$ref": "#MapDeletionSemanticPropertyType"
            },
            {
              "$ref": "#MapIsDefinitionalPropertyType"
            },
            {
              "$ref": "#MapIsOrderedPropertyType"
            },
            {
              "$ref": "#MapAllowsDuplicatesPropertyType"
            },
            {
              "$ref": "#MapMinCardinalityPropertyType"
            },
            {
              "$ref": "#MapMaxCardinalityPropertyType"
            }
          ]
        },
        {
          "name": "InstanceRelationships",
          "target": [
            {
              "$ref": "#(RelationshipType)-[SourceType]->(HolonType)"
            },
            {
              "$ref": "#(RelationshipType)-[TargetType]->(HolonType)"
            }
          ]
        }
      ]
    },
    {
      "key": "DanceType",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "DanceType",
        "type_name_plural": "DanceTypes",
        "display_name": "Dance Type",
        "display_name_plural": "Dance Types",
        "description": "Abstract holon type for all dance descriptors. Describes request-response interactions offered by a holon type.",
        "is_abstract_type": true,
        "instance_type_kind": "Holon"
      },
      "relationships": [
        {
          "name": "Extends",
          "target": {
            "$ref": "#HolonType"
          }
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#TypeName.KeyRule"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        },
        {
          "name": "InstanceRelationships",
          "target": [
            {
              "$ref": "#(DanceType)-[Request]->(DanceRequestType)"
            },
            {
              "$ref": "#(DanceType)-[Response]->(DanceResponseType)"
            }
          ]
        }
      ]
    },
    {
      "key": "DanceRequestType",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "DanceRequestType",
        "type_name_plural": "DanceRequestTypes",
        "display_name": "Dance Request Type",
        "display_name_plural": "Dance Request Types",
        "description": "Abstract type for request objects in a dance interaction. Includes reference to a request body holon.",
        "is_abstract_type": true,
        "instance_type_kind": "Holon"
      },
      "relationships": [
        {
          "name": "Extends",
          "target": {
            "$ref": "#HolonType"
          }
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#TypeName.KeyRule"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        },
        {
          "name": "InstanceRelationships",
          "target": [
            {
              "$ref": "#(DanceRequestType)-[RequestBody]->(Holon)"
            }
          ]
        }
      ]
    },
    {
      "key": "DanceResponseType",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "DanceResponseType",
        "type_name_plural": "DanceResponseTypes",
        "display_name": "Dance Response Type",
        "display_name_plural": "Dance Response Types",
        "description": "Abstract type for response objects in a dance interaction. Serves as the template for all concrete Dance Response types. Includes reference to a response body holon.",
        "is_abstract_type": true,
        "instance_type_kind": "Holon"
      },
      "relationships": [
        {
          "name": "Extends",
          "target": {
            "$ref": "#HolonType"
          }
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#TypeName.KeyRule"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        },
        {
          "name": "InstanceRelationships",
          "target": [
            {
              "$ref": "#(DanceResponseType)-[ResponseBody]->(Holon)"
            }
          ]
        }
      ]
    }
  ]
}
