{
  "meta": {
    "description": "Defines all declared and inverse relationship types required by the MAP Metaschema, in interleaved form for clarity.",
    "generator": "MAP Types and Schema Refactor \u2014 July 2025",
    "load_with": [
      "metaschema-abstract-value-types.json",
      "metaschema-concrete-value-types.json",
      "metaschema-property-types.json",
      "metaschema-root.json",
      "metaschema-keyrules-schema.json"
    ]
  },
  "holons": [
    {
      "key": "(TypeDescriptor)-[ComponentOf]->(SchemaType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "ComponentOf",
        "type_name_plural": "ComponentOfRelationships",
        "display_name": "ComponentOf",
        "display_name_plural": "ComponentOf Relationships",
        "description": "Links a type descriptor to the schema that contains it.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#TypeDescriptor"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#SchemaType"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(SchemaType)-[Components]->(TypeDescriptor)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "Components",
        "type_name_plural": "ComponentsRelationships",
        "display_name": "Components",
        "display_name_plural": "Components Relationships",
        "description": "Inverse of ComponentOf, from SchemaType to TypeDescriptor.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#SchemaType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#TypeDescriptor"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(TypeDescriptor)-[ComponentOf]->(SchemaType)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(TypeDescriptor)-[InstanceProperties]->(PropertyType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "InstanceProperties",
        "type_name_plural": "InstancePropertiesRelationships",
        "display_name": "InstanceProperties",
        "display_name_plural": "InstanceProperties Relationships",
        "description": "Connects a type descriptor to its expected property types.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#TypeDescriptor"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#PropertyType"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(PropertyType)-[InstancePropertyFor]->(TypeDescriptor)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "InstancePropertyFor",
        "type_name_plural": "InstancePropertyForRelationships",
        "display_name": "InstancePropertyFor",
        "display_name_plural": "InstancePropertyFor Relationships",
        "description": "Inverse of InstanceProperties, from PropertyType to TypeDescriptor.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#PropertyType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#TypeDescriptor"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(TypeDescriptor)-[InstanceProperties]->(PropertyType)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(TypeDescriptor)-[InstanceRelationships]->(DeclaredRelationshipType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "InstanceRelationships",
        "type_name_plural": "InstanceRelationships",
        "display_name": "Instance Relationships",
        "display_name_plural": "Instance Relationships",
        "description": "Connects a type descriptor to its expected relationship types.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#TypeDescriptor"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#DeclaredRelationshipType"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(DeclaredRelationshipType)-[InstanceRelationshipFor]->(TypeDescriptor)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "InstanceRelationshipFor",
        "type_name_plural": "InstanceRelationshipForRelationships",
        "display_name": "InstanceRelationshipFor",
        "display_name_plural": "InstanceRelationshipFor Relationships",
        "description": "Inverse of InstanceRelationships, from DeclaredRelationshipType to TypeDescriptor.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#DeclaredRelationshipType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#TypeDescriptor"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(TypeDescriptor)-[InstanceRelationships]->(DeclaredRelationshipType)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(Holon)-[DescribedBy]->(TypeDescriptor)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "DescribedBy",
        "type_name_plural": "DescribedByRelationships",
        "display_name": "DescribedBy",
        "display_name_plural": "DescribedBy Relationships",
        "description": "Links a holon to the type descriptor that describes it.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#Holon"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#TypeDescriptor"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(TypeDescriptor)-[Instances]->(Holon)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "Instances",
        "type_name_plural": "InstancesRelationships",
        "display_name": "Instances",
        "display_name_plural": "Instances Relationships",
        "description": "Inverse of DescribedBy, from TypeDescriptor to Holon.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#TypeDescriptor"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#Holon"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(Holon)-[DescribedBy]->(TypeDescriptor)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(Holon)-[OwnedBy]->(HolonSpace)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "OwnedBy",
        "type_name_plural": "OwnedByRelationships",
        "display_name": "OwnedBy",
        "display_name_plural": "OwnedBy Relationships",
        "description": "Indicates which holon space owns the given holon.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#Holon"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#HolonSpace"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(HolonSpace)-[Owns]->(Holon)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "Owns",
        "type_name_plural": "OwnsRelationships",
        "display_name": "Owns",
        "display_name_plural": "Owns Relationships",
        "description": "Inverse of OwnedBy, from HolonSpace to Holon.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#HolonSpace"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#Holon"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(Holon)-[OwnedBy]->(HolonSpace)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(PropertyType)-[ValueType]->(ValueType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "ValueType",
        "type_name_plural": "ValueTypeRelationships",
        "display_name": "ValueType",
        "display_name_plural": "ValueType Relationships",
        "description": "Specifies the value type constraint for a property.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#PropertyType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#ValueType"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(ValueType)-[ValueTypeFor]->(PropertyType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "ValueTypeFor",
        "type_name_plural": "ValueTypeForRelationships",
        "display_name": "ValueTypeFor",
        "display_name_plural": "ValueTypeFor Relationships",
        "description": "Inverse of ValueType, from ValueType to PropertyType.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#ValueType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#PropertyType"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(PropertyType)-[ValueType]->(ValueType)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(PropertyType)-[PropertyName]->(PropertyNameValueType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "PropertyName",
        "type_name_plural": "PropertyNameRelationships",
        "display_name": "PropertyName",
        "display_name_plural": "PropertyName Relationships",
        "description": "Associates a property type with its symbolic name.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#PropertyType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#PropertyNameValueType"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(PropertyNameValueType)-[PropertyNameFor]->(PropertyType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "PropertyNameFor",
        "type_name_plural": "PropertyNameForRelationships",
        "display_name": "PropertyNameFor",
        "display_name_plural": "PropertyNameFor Relationships",
        "description": "Inverse of PropertyName, from PropertyNameValueType to PropertyType.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#PropertyNameValueType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#PropertyType"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(PropertyType)-[PropertyName]->(PropertyNameValueType)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(RelationshipType)-[SourceType]->(HolonType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "SourceType",
        "type_name_plural": "SourceTypeRelationships",
        "display_name": "SourceType",
        "display_name_plural": "SourceType Relationships",
        "description": "Defines the source holon type for a relationship type.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 1,
        "max_cardinality": 1
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#RelationshipType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#HolonType"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(HolonType)-[SourceOf]->(RelationshipType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "SourceOf",
        "type_name_plural": "SourceOfRelationships",
        "display_name": "SourceOf",
        "display_name_plural": "SourceOf Relationships",
        "description": "Inverse of SourceType, from HolonType to RelationshipType.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 1,
        "max_cardinality": 1
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#HolonType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#RelationshipType"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(RelationshipType)-[SourceType]->(HolonType)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(RelationshipType)-[TargetType]->(HolonType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "TargetType",
        "type_name_plural": "TargetTypeRelationships",
        "display_name": "TargetType",
        "display_name_plural": "TargetType Relationships",
        "description": "Defines the target holon type for a relationship type.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#RelationshipType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#HolonType"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(HolonType)-[TargetOf]->(RelationshipType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "TargetOf",
        "type_name_plural": "TargetOfRelationships",
        "display_name": "TargetOf",
        "display_name_plural": "TargetOf Relationships",
        "description": "Inverse of TargetType, from HolonType to RelationshipType.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#HolonType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#RelationshipType"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(RelationshipType)-[TargetType]->(HolonType)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(InverseRelationshipType)-[InverseOf]->(DeclaredRelationshipType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "InverseOf",
        "type_name_plural": "InverseOfRelationships",
        "display_name": "InverseOf",
        "display_name_plural": "InverseOf Relationships",
        "description": "Links an inverse relationship type to the declared relationship it reverses.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#InverseRelationshipType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#DeclaredRelationshipType"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(DeclaredRelationshipType)-[HasInverse]->(InverseRelationshipType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "HasInverse",
        "type_name_plural": "HasInverseRelationships",
        "display_name": "HasInverse",
        "display_name_plural": "HasInverse Relationships",
        "description": "Inverse of InverseOf, from DeclaredRelationshipType to InverseRelationshipType.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#DeclaredRelationshipType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#InverseRelationshipType"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(InverseRelationshipType)-[InverseOf]->(DeclaredRelationshipType)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(EnumValueType)-[Variants]->(EnumVariantType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "Variants",
        "type_name_plural": "VariantsRelationships",
        "display_name": "Variants",
        "display_name_plural": "Variants Relationships",
        "description": "Declares the allowed symbolic variants of an enum value type.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#EnumValueType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#EnumVariantType"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(EnumVariantType)-[VariantOf]->(EnumValueType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "VariantOf",
        "type_name_plural": "VariantOfRelationships",
        "display_name": "VariantOf",
        "display_name_plural": "VariantOf Relationships",
        "description": "Inverse of Variants, from EnumVariantType to EnumValueType.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#EnumVariantType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#EnumValueType"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(EnumValueType)-[Variants]->(EnumVariantType)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(SchemaHolonType)-[DependsOn]->(SchemaHolonType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "DependsOn",
        "type_name_plural": "DependsOnRelationships",
        "display_name": "DependsOn",
        "display_name_plural": "DependsOn Relationships",
        "description": "Indicates that one schema holon depends on another.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#SchemaHolonType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#SchemaHolonType"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(SchemaHolonType)-[Dependents]->(SchemaHolonType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "Dependents",
        "type_name_plural": "DependentsRelationships",
        "display_name": "Dependents",
        "display_name_plural": "Dependents Relationships",
        "description": "Inverse of DependsOn, indicating which schemas depend on this one.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#SchemaHolonType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#SchemaHolonType"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(SchemaHolonType)-[DependsOn]->(SchemaHolonType)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(ValueArrayType)-[ElementValueType]->(ValueType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "ElementValueType",
        "type_name_plural": "ElementValueTypeRelationships",
        "display_name": "ElementValueType",
        "display_name_plural": "ElementValueType Relationships",
        "description": "Specifies the element value type of a value array.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#DeclaredRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#ValueArrayType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#ValueType"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    },
    {
      "key": "(ValueType)-[ElementValueTypeFor]->(ValueArrayType)",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "ElementValueTypeFor",
        "type_name_plural": "ElementValueTypeForRelationships",
        "display_name": "ElementValueTypeFor",
        "display_name_plural": "ElementValueTypeFor Relationships",
        "description": "Inverse of ElementValueType, from ValueType to ValueArrayType.",
        "type_kind": "Relationship",
        "is_abstract_type": false,
        "deletion_semantic": "Allow",
        "is_definitional": false,
        "is_ordered": false,
        "allows_duplicates": false,
        "min_cardinality": 0,
        "max_cardinality": 32767
      },
      "relationships": [
        {
          "name": "Extends",
          "target": [
            {
              "$ref": "#InverseRelationshipType"
            },
            {
              "$ref": "#TypeDescriptor"
            }
          ]
        },
        {
          "name": "UsesKeyRule",
          "target": {
            "$ref": "#Relationship.KeyRuleType"
          }
        },
        {
          "name": "SourceType",
          "target": {
            "$ref": "#ValueType"
          }
        },
        {
          "name": "TargetType",
          "target": {
            "$ref": "#ValueArrayType"
          }
        },
        {
          "name": "InverseOf",
          "target": {
            "$ref": "#(ValueArrayType)-[ElementValueType]->(ValueType)"
          }
        },
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.2"
          }
        }
      ]
    }
  ]
}