{
  "meta": {
    "description": "MAP Meta Schema defines the MetaTypeDescriptor and other type descriptors used to describe all MAP types.",
    "generator": "MAP Types and Schema Refactor â€” July 2025",
    "load_with": [
      "metaschema-abstract-value-types.json",
      "metaschema-concrete-value-types.json",
      "metaschema-core-holon-types.json",
      "metaschema-property-types.json",
      "metaschema-relationship-types.json",
      "metaschema-keyrules-schema.json"
    ]
  },
  "holons": [
    {
      "key": "MAP Metaschema-v0.0.3",
      "type": "#SchemaHolonType",
      "properties": {
        "schema_name": "MAP Metaschema-v0.0.3",
        "description": "Schema containing all meta-level descriptors for MAP type definitions, including the TypeDescriptor itself."
      },
      "relationships": [
        {
          "name": "InstanceRelationships",
          "target": [
            {
              "$ref": "#(SchemaHolonType)-[DependsOn]->(SchemaHolonType)"
            }
          ]
        }
      ]
    },
    {
      "key": "MetaTypeDescriptor",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "MetaTypeDescriptor",
        "type_name_plural": "MetaTypeDescriptors",
        "display_name": "Meta Type Descriptor",
        "display_name_plural": "Meta Type Descriptors",
        "description": "Specifies the properties and relationships that all TypeDescriptors populate.",
        "instance_type_kind": "Holon"
      },
      "relationships": [
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.3"
          }
        },
        {
          "name": "Extends",
          "target": {
            "$ref": "#MetaHolonType"
          }
        },
        {
          "name": "InstanceProperties",
          "target": [
            {
              "$ref": "#TypeName.Property"
            },
            {
              "$ref": "#TypeNamePlural.Property"
            },
            {
              "$ref": "#DisplayName.Property"
            },
            {
              "$ref": "#DisplayNamePlural.Property"
            },
            {
              "$ref": "#Description.Property"
            },
            {
              "$ref": "#InstanceTypeKind.Property"
            },
            {
              "$ref": "#MapIsAbstractTypePropertyType"
            }
          ]
        },
        {
          "name": "InstanceRelationships",
          "target": [
            {
              "$ref": "#(TypeDescriptor)-[ComponentOf]->(Schema)"
            }
          ]
        }
      ]
    },
    {
      "key": "MetaHolonType",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "MetaHolonType",
        "type_name_plural": "MetaHolonTypes",
        "display_name": "Meta Holon Type",
        "display_name_plural": "Meta Holon Types",
        "description": "Describes types whose instances are holons.",
        "instance_type_kind": "Holon"
      },
      "relationships": [
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.3"
          }
        },
        {
          "name": "Extends",
          "target": {
            "$ref": "#MetaTypeDescriptor"
          }
        },
        {
          "name": "InstanceRelationships",
          "target": [
            {
              "$ref": "#(HolonType)-[DescribedBy]->(TypeDescriptor)"
            },
            {
              "$ref": "#(HolonType)-[OwnedBy]->(HolonSpace)"
            }
          ]
        }
      ]
    },
    {
      "key": "MetaPropertyType",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "MetaPropertyType",
        "type_name_plural": "MetaPropertyTypes",
        "display_name": "Meta Property Type",
        "display_name_plural": "Meta Property Types",
        "description": "Describes PropertyTypes used to define scalar properties of holons.",
        "instance_type_kind": "Holon"
      },
      "relationships": [
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.3"
          }
        },
        {
          "name": "Extends",
          "target": {
            "$ref": "#MetaHolonType"
          }
        },
        {
          "name": "InstanceProperties",
          "target": [
            {
              "$ref": "#IsRequired.Property"
            }
          ]
        },
        {
          "name": "InstanceRelationships",
          "target": [
            {
              "$ref": "#(PropertyType)-[ValueType]->(ValueType)"
            }
          ]
        }
      ]
    },
    {
      "key": "MetaDeclaredRelationshipType",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "MetaDeclaredRelationshipType",
        "type_name_plural": "MetaDeclaredRelationshipTypes",
        "display_name": "Meta Declared Relationship Type",
        "display_name_plural": "Meta Declared Relationship Types",
        "description": "Describes explicitly declared relationship types between holons.",
        "instance_type_kind": "Holon"
      },
      "relationships": [
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.3"
          }
        },
        {
          "name": "Extends",
          "target": {
            "$ref": "#RelationshipType"
          }
        }
      ]
    },
    {
      "key": "MetaInverseRelationshipType",
      "type": "#TypeDescriptor",
      "properties": {
        "type_name": "MetaInverseRelationshipType",
        "type_name_plural": "MetaInverseRelationshipTypes",
        "display_name": "Meta Inverse Relationship Type",
        "display_name_plural": "Meta Inverse Relationship Types",
        "description": "Describes inverse relationship types derived from declared ones.",
        "instance_type_kind": "Holon"
      },
      "relationships": [
        {
          "name": "ComponentOf",
          "target": {
            "$ref": "#MAP Metaschema-v0.0.3"
          }
        },
        {
          "name": "Extends",
          "target": {
            "$ref": "#RelationshipType"
          }
        },
        {
          "name": "InstanceRelationships",
          "target": [
            {
              "$ref": "#(InverseRelationshipType)-[InverseOf]->(DeclaredRelationshipType)"
            }
          ]
        }
      ]
    }
  ]
}
