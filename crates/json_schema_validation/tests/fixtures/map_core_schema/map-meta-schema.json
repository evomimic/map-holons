{
  "meta": {
    "map_schema_version": "0.0.1",
    "description": "MAP Meta Schema defines the MetaTypeDescriptor and other type descriptors used to describe all MAP types.",
    "generator": "MAP Types and Schema Refactor — July 2025"
  },
  "holons": [
    {
      "key": "MAP Meta Schema",
      "type": "#SchemaHolonType",
      "properties": {
        "schema_name": "MAP Meta Schema",
        "description": "Schema containing all meta-level descriptors for MAP type definitions, including the TypeDescriptor itself."
      },
      "relationships": [
        {
          "name": "InstanceRelationships",
          "target": [
            {
              "$ref": "#(SchemaHolonType)-[DependsOn]->(SchemaHolonType)"
            }
          ]
        },
        {
          "name": "Components",
          "target": [
            {
              "key": "SchemaHolonType",
              "type": "#TypeDescriptor",
              "properties": {
                "type_name": "SchemaHolonType",
                "type_name_plural": "SchemaHolonTypes",
                "display_name": "Schema Holon Type",
                "display_name_plural": "Schema Holon Types",
                "description": "Describes schema holons — groupings of holons that represent a cohesive schema. Includes the ability to define inter-schema dependencies."
              },
              "relationships": [
                {
                  "name": "Extends",
                  "target": {
                    "$ref": "#MetaHolonType"
                  }
                },
                {
                  "name": "InstanceProperties",
                  "target": [
                    {
                      "$ref": "#MapStringPropertyType"
                    },
                    {
                      "$ref": "#MapDescriptionPropertyType"
                    }
                  ]
                },
                {
                  "name": "InstanceRelationships",
                  "target": [
                    {
                      "$ref": "#(SchemaHolonType)-[DependsOn]->(SchemaHolonType)"
                    }
                  ]
                }
              ]
            },
            {
              "key": "HolonType",
              "type": "#TypeDescriptor",
              "properties": {
                "type_name": "HolonType",
                "type_name_plural": "HolonTypes",
                "display_name": "Abstract Holon Type",
                "display_name_plural": "Abstract Holon Types",
                "description": "Abstract base for all holon types. Declares required holon-level relationships."
              },
              "relationships": [
                {
                  "name": "InstanceRelationships",
                  "target": [
                    {
                      "$ref": "#(Holon)-[DescribedBy]->(TypeDescriptor)"
                    },
                    {
                      "$ref": "#(Holon)-[OwnedBy]->(HolonSpace)"
                    }
                  ]
                }
              ]
            },
            {
              "key": "RelationshipType",
              "type": "#TypeDescriptor",
              "properties": {
                "type_name": "RelationshipType",
                "type_name_plural": "RelationshipTypes",
                "display_name": "Abstract Relationship Type",
                "display_name_plural": "Abstract Relationship Types",
                "description": "Abstract base for declared and inverse relationship types."
              },
              "relationships": [
                {
                  "name": "Extends",
                  "target": {
                    "$ref": "#MetaHolonType"
                  }
                },
                {
                  "name": "InstanceProperties",
                  "target": [
                    {
                      "$ref": "#MapDeletionSemanticPropertyType"
                    },
                    {
                      "$ref": "#MapIsDefinitionalPropertyType"
                    },
                    {
                      "$ref": "#MapIsOrderedPropertyType"
                    },
                    {
                      "$ref": "#MapAllowsDuplicatesPropertyType"
                    },
                    {
                      "$ref": "#MapMinCardinalityPropertyType"
                    },
                    {
                      "$ref": "#MapMaxCardinalityPropertyType"
                    }
                  ]
                },
                {
                  "name": "InstanceRelationships",
                  "target": [
                    {
                      "$ref": "#(RelationshipType)-[SourceType]->(HolonType)"
                    },
                    {
                      "$ref": "#(RelationshipType)-[TargetType]->(HolonType)"
                    }
                  ]
                }
              ]
            },
            {
              "key": "MetaTypeDescriptor",
              "type": "#TypeDescriptor",
              "properties": {
                "type_name": "MetaTypeDescriptor",
                "type_name_plural": "MetaTypeDescriptors",
                "display_name": "Meta Type Descriptor",
                "display_name_plural": "Meta Type Descriptors",
                "description": "Describes TypeDescriptors — the types used to describe all other types in MAP."
              },
              "relationships": [
                {
                  "name": "Extends",
                  "target": {
                    "$ref": "#MetaHolonType"
                  }
                },
                {
                  "name": "InstanceProperties",
                  "target": [
                    {
                      "$ref": "#MapTypeNamePropertyType"
                    },
                    {
                      "$ref": "#MapTypeNamePluralPropertyType"
                    },
                    {
                      "$ref": "#MapDisplayNamePropertyType"
                    },
                    {
                      "$ref": "#MapDisplayNamePluralPropertyType"
                    },
                    {
                      "$ref": "#MapDescriptionPropertyType"
                    },
                    {
                      "$ref": "#MapTypeKindPropertyType"
                    }
                  ]
                },
                {
                  "name": "InstanceRelationships",
                  "target": [
                    {
                      "$ref": "#(TypeDescriptor)-[ComponentOf]->(Schema)"
                    },
                    {
                      "$ref": "#(TypeDescriptor)-[DescribedBy]->(TypeDescriptor)"
                    },
                    {
                      "$ref": "#(TypeDescriptor)-[OwnedBy]->(HolonSpace)"
                    },
                    {
                      "$ref": "#(TypeDescriptor)-[Extends]->(TypeDescriptor)"
                    },
                    {
                      "$ref": "#(TypeDescriptor)-[InstanceProperties]->(PropertyType)"
                    },
                    {
                      "$ref": "#(TypeDescriptor)-[InstanceRelationships]->(DeclaredRelationshipType)"
                    }
                  ]
                }
              ]
            },
            {
              "key": "MetaHolonType",
              "type": "#TypeDescriptor",
              "properties": {
                "type_name": "MetaHolonType",
                "type_name_plural": "MetaHolonTypes",
                "display_name": "Meta Holon Type",
                "display_name_plural": "Meta Holon Types",
                "description": "Describes types whose instances are holons."
              },
              "relationships": [
                {
                  "name": "Extends",
                  "target": {
                    "$ref": "#MetaTypeDescriptor"
                  }
                },
                {
                  "name": "InstanceRelationships",
                  "target": [
                    {
                      "$ref": "#(HolonType)-[DescribedBy]->(TypeDescriptor)"
                    },
                    {
                      "$ref": "#(HolonType)-[OwnedBy]->(HolonSpace)"
                    }
                  ]
                }
              ]
            },
            {
              "key": "MetaPropertyType",
              "type": "#TypeDescriptor",
              "properties": {
                "type_name": "MetaPropertyType",
                "type_name_plural": "MetaPropertyTypes",
                "display_name": "Meta Property Type",
                "display_name_plural": "Meta Property Types",
                "description": "Describes PropertyTypes used to define scalar properties of holons."
              },
              "relationships": [
                {
                  "name": "Extends",
                  "target": {
                    "$ref": "#MetaTypeDescriptor"
                  }
                },
                {
                  "name": "InstanceRelationships",
                  "target": [
                    {
                      "$ref": "#(PropertyType)-[ValueType]->(ValueType)"
                    },
                    {
                      "$ref": "#(PropertyType)-[DescribedBy]->(TypeDescriptor)"
                    },
                    {
                      "$ref": "#(PropertyType)-[OwnedBy]->(HolonSpace)"
                    },
                    {
                      "$ref": "#(PropertyType)-[ComponentOf]->(Schema)"
                    },
                    {
                      "$ref": "#(PropertyType)-[PropertyName]->(PropertyNameValueType)"
                    }
                  ]
                }
              ]
            },
            {
              "key": "MetaDeclaredRelationshipType",
              "type": "#TypeDescriptor",
              "properties": {
                "type_name": "MetaDeclaredRelationshipType",
                "type_name_plural": "MetaDeclaredRelationshipTypes",
                "display_name": "Meta Declared Relationship Type",
                "display_name_plural": "Meta Declared Relationship Types",
                "description": "Describes explicitly declared relationship types between holons."
              },
              "relationships": [
                {
                  "name": "Extends",
                  "target": {
                    "$ref": "#RelationshipType"
                  }
                }
              ]
            },
            {
              "key": "MetaInverseRelationshipType",
              "type": "#TypeDescriptor",
              "properties": {
                "type_name": "MetaInverseRelationshipType",
                "type_name_plural": "MetaInverseRelationshipTypes",
                "display_name": "Meta Inverse Relationship Type",
                "display_name_plural": "Meta Inverse Relationship Types",
                "description": "Describes inverse relationship types derived from declared ones."
              },
              "relationships": [
                {
                  "name": "Extends",
                  "target": {
                    "$ref": "#RelationshipType"
                  }
                },
                {
                  "name": "InstanceRelationships",
                  "target": [
                    {
                      "$ref": "#(InverseRelationshipType)-[InverseOf]->(DeclaredRelationshipType)"
                    }
                  ]
                }
              ]
            },
            {
              "key": "SchemaHolonType",
              "type": "#TypeDescriptor",
              "properties": {
                "type_name": "SchemaHolonType",
                "type_name_plural": "SchemaHolonTypes",
                "display_name": "Schema Holon Type",
                "display_name_plural": "Schema Holon Types",
                "description": "Describes schema holons that group together type descriptors."
              },
              "relationships": [
                {
                  "name": "Extends",
                  "target": {
                    "$ref": "#MetaHolonType"
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}